module Hello where

type HelloBlockChainId = ContractId HelloBlockChain

data HelloStateType 
  = S0 
  | S1
  | S2
  | S3
    deriving (Eq, Show)

template HelloBlockChain
  with 
    owner : Party
    state     : HelloStateType
  where
    signatory owner 
    observer owner

    choice MakeOffer : HelloBlockChainId
      controller owner
      do
          assertMsg "Invalid State" (this.state == S0) 
      
          create this with
            state = S1

    choice Accept : HelloBlockChainId
      controller owner
      do 
          assertMsg "Invalid State" (this.state == S1)
          create this with
              state = S2
    
    choice Reject : HelloBlockChainId
      controller owner
      do 
          assertMsg "Invalid State" (this.state == S1)
          create this with
              state = S0

    choice Thinks : HelloBlockChainId
      controller owner
      do 
          assertMsg "Invalid State" (this.state == S2)
          create this with
              state = S3

    choice AnotherOne : HelloBlockChainId
      controller owner
      do 
          assertMsg "Invalid State" (this.state == S3)
          create this with
              state = S1